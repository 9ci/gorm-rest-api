# circleCI build file
version: 2.1
jobs:
  build:
    docker:
      - image: yakworks/alpine-java:jdk8-builder

    steps:
      - checkout
      # Download and cache dependencies
      - run:
          name: cat build.gradle files for cache key
          command: cat gradle.properties build.gradle plugin/build.gradle examples/restify/build.gradle > cache-checksum.tmp

      - restore_cache:
          keys:
            - gradle-{{ checksum "cache-checksum.tmp" }}
      - run:
          name: ✔︎ Downloads Dependencies [gradle resolveConfigurations]
          command: ./gradlew resolveConfigurations

      # compiling as a seperate step before running check helps with the "finished with non-zero exit value 137" error
      - run:
          name: ✔︎ ------ Compile [gradle classes] ------
          command: ./gradlew classes

      - save_cache:
          paths: ["~/.m2", "~/.gradle"]
          key: v2-gradle-{{ checksum "cache-checksum.tmp" }}

      - run:
          name: ✔︎ -- Checks Full Run Tests [gradle check]
          command: ./gradlew check --max-workers=2

      - store_artifacts:
          path: plugin/build/reports/codenarc
          destination: codenarc/
      - store_artifacts:
          path: plugin/build/reports/tests/test/
          destination: unit/
      - store_artifacts:
          path: examples/restify/build/reports/tests
          destination: test-app/
      - store_test_results:
          path: plugin/build/test-results
      - store_test_results:
          path: examples/restify/build/test-results

      ### Finally do the build and publish. ciPublish will check if this is a PR or on a branch that should not be published
      - compare-url/reconstruct # orb to make the CIRCLE_COMPARE_URL when using workflows
      - run:
          name: ✔︎ -- Publish plugin if needed [gradle ciPublish]
          command: |
            CIRCLE_COMPARE_URL=$(cat CIRCLE_COMPARE_URL.txt)
            ./gradlew ciPublish --no-daemon

orbs:
  compare-url: iynere/compare-url@1.1.0

workflows:
  version: 2
  build-flow:
    jobs:
      - build:
          context: bot-context #context with shared ENV vars


