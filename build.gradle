buildscript {
	repositories {
		mavenLocal()
		maven { url "https://repo.grails.org/grails/core" }
	}
	dependencies {
		classpath "org.grails:grails-gradle-plugin:$grailsVersion"
		classpath "org.grails:grails-docs:$grailsVersion"
		classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'
		classpath 'io.github.groovylang.groovydoc:groovydoc-gradle-plugin:1.0.1'
		classpath "com.bertramlabs.plugins:asset-pipeline-gradle:2.8.2"
	}
}

apply plugin: 'idea'
apply plugin:'groovy'

repositories {
	mavenLocal()
	maven { url "https://repo.grails.org/grails/core" }
}

//Root project and view-tools plugin uses same version.
version project.projectVersion

project(':gorm-rest-api') {
	version = project.projectVersion
}

ext {
	commonBuild = "https://raw.githubusercontent.com/yakworks/grails-common-build/master"
	grailsApps = ['grails-funcytown', 'restify']
	grailsPlugins = ['gorm-rest-api', 'taskify-domains-plugin']
}


subprojects {

	boolean isGrailsApp = grailsApps.contains(project.name)
	boolean isGrailsPlugin = grailsPlugins.contains(project.name)
	boolean isGrailsProject = isGrailsApp || isGrailsPlugin
	boolean isBuildSnapshot = version.toString().endsWith("-SNAPSHOT")

	println project.name + ":" + version.toString()

	ext {
		userOrg = "grails"
		set "tomcat.version", "8.5.5"
		isSnapshot = isBuildSnapshot
	}

	apply from:"$commonBuild/common.gradle"

	String seleniumVersion = "3.8.1"
	dependencies {
		compile "org.springframework.boot:spring-boot-starter-logging"
		compile "org.springframework.boot:spring-boot-autoconfigure"
		compile "org.grails:grails-core"
		compile "org.springframework.boot:spring-boot-starter-actuator"
		compile "org.springframework.boot:spring-boot-starter-tomcat"
		compile "org.grails:grails-web-boot"
		compile "org.grails:grails-logging"
		compile "org.grails:grails-plugin-rest"
		compile "org.grails:grails-plugin-databinding"
		compile "org.grails:grails-plugin-i18n"
		compile "org.grails:grails-plugin-services"
		compile "org.grails:grails-plugin-url-mappings"
		compile "org.grails:grails-plugin-interceptors"
		compile "org.grails.plugins:cache"
		// compile "org.grails.plugins:async"
		// compile "org.grails.plugins:scaffolding"
		compile "org.grails.plugins:events"

		compile "org.grails.plugins:hibernate5"
		compile "org.hibernate:hibernate-core:5.1.5.Final"
		compile "org.hibernate:hibernate-ehcache"

		compileOnly "org.grails.plugins:views-json:1.2.5"
		compileOnly "org.grails.plugins:views-json-templates:1.2.5"

		//compile "org.grails.plugins:gsp"
		//console "org.grails:grails-console"
		//profile "org.grails.profiles:web"
		//runtime "org.glassfish.web:el-impl:2.1.2-b03"
		runtime "com.h2database:h2"
		runtime "org.apache.tomcat:tomcat-jdbc"
		//runtime "com.bertramlabs.plugins:asset-pipeline-grails:2.14.6"

		compile "org.grails:grails-gorm-testing-support"
		compile "org.grails:grails-web-testing-support"
		compile "org.grails.plugins:geb"
		testCompile "org.seleniumhq.selenium:selenium-htmlunit-driver:2.47.1"
	}



	if (isGrailsPlugin) {
		apply plugin:"org.grails.grails-plugin"
		apply plugin:"org.grails.grails-gsp"

		dependencies {
			profile "org.grails.profiles:web-plugin"
			provided "org.grails:grails-plugin-services"
			provided "org.grails:grails-plugin-domain-class"

			console "org.grails:grails-console"
		}

		//apply from: "${commonBuild}/common-plugin.gradle"
		//apply from: "${commonBuild}/common-publishing.gradle"
		//apply from: "../publish.gradle"
		group "org.grails.plugins"
	}

	if (isGrailsApp) {
		apply plugin:"org.grails.grails-web"
		apply plugin:"war"
		apply plugin:"org.grails.grails-gsp"

		dependencies {
			profile "org.grails.profiles:web"
			compile "org.springframework.boot:spring-boot-starter-actuator"
			provided "org.springframework.boot:spring-boot-starter-tomcat"

			console "org.grails:grails-console"
		}

		bootRun {
			jvmArgs('-Dspring.output.ansi.enabled=always')
			addResources = true
		}
		//apply from: "${commonBuild}/common-project.gradle"
		group "org.grails"
	}

}
